syntax = "proto3";

package pb;

option go_package = "github.com/riven-blade/datahive/pkg/protocol/pb";

// =====================================================================================
// 基础消息结构
// =====================================================================================

// Message 通用消息包装器
message Message {
  string id = 1;           // 消息ID
  ActionType action = 2;   // 动作类型
  MessageType type = 3;    // 消息类型
  bytes data = 4;          // 消息载荷
  int64 timestamp = 5;     // 时间戳
}

// MessageType 消息类型枚举
enum MessageType {
  REQUEST = 0;
  RESPONSE = 1;
  NOTIFICATION = 2;
  ERROR = 3;
}

// ActionType 动作类型枚举
enum ActionType {
  // 订阅管理
  SUBSCRIBE = 0;
  UNSUBSCRIBE = 1;
  
  // 数据获取
  FETCH_MARKETS = 10;
  FETCH_TICKER = 11;        // 返回完整ticker数据
  FETCH_TICKERS = 12;
  FETCH_KLINES = 13;
  FETCH_TRADES = 14;
  FETCH_ORDERBOOK = 15;
  
  // 数据推送 - 增强版本
  MARKET_UPDATE = 20;
  PRICE_UPDATE = 21;         // 通用价格更新
  MINI_TICKER_UPDATE = 22;   // 轻量级ticker更新  
  MARK_PRICE_UPDATE = 23;    // 标记价格更新(期货专用)
  BOOK_TICKER_UPDATE = 24;   // 最优买卖价更新
  FULL_TICKER_UPDATE = 25;   // 完整ticker更新
  KLINE_UPDATE = 26;
  TRADE_UPDATE = 27;
  ORDERBOOK_UPDATE = 28;
}

// Error 错误信息
message Error {
  int32 code = 1;
  string message = 2;
  string details = 3;
}

// =====================================================================================
// 数据结构定义
// =====================================================================================

// Market 市场信息
message Market {
  string id = 1;              // 交易所内部ID
  string symbol = 2;          // 标准化交易对符号
  string base = 3;            // 基础货币
  string quote = 4;           // 计价货币
  string settle = 5;          // 结算货币 (期货合约)
  string type = 6;            // 市场类型: spot, swap, future, option
  
  // 市场类型标识
  bool spot = 7;              // 是否现货
  bool margin = 8;            // 是否支持保证金
  bool swap = 9;              // 是否永续合约
  bool future = 10;           // 是否期货
  bool option = 11;           // 是否期权
  bool active = 12;           // 是否活跃
  bool contract = 13;         // 是否合约
  bool linear = 14;           // 是否线性合约
  bool inverse = 15;          // 是否反向合约
  
  // 费率信息
  double maker_fee = 16;      // 做市商手续费率
  double taker_fee = 17;      // 吃单手续费率
  
  // 合约相关信息
  double contract_size = 18;  // 合约大小
  int64 expiry = 19;          // 到期时间戳 (期货)
  string expiry_datetime = 20; // 到期时间 ISO8601 格式
  double strike = 21;         // 行权价 (期权)
  string option_type = 22;    // call/put (期权)
  
  // 精度信息
  MarketPrecision precision = 23;
  
  // 限制信息
  MarketLimits limits = 24;
  
  string info = 25;
}

// MarketPrecision 市场精度信息
message MarketPrecision {
  double amount = 1;          // 数量精度
  double price = 2;           // 价格精度
  double cost = 3;            // 成本精度
}

// MarketLimits 市场限制信息
message MarketLimits {
  LimitRange leverage = 1;    // 杠杆范围
  LimitRange amount = 2;      // 数量范围
  LimitRange price = 3;       // 价格范围
  LimitRange cost = 4;        // 成本范围
}

// LimitRange 范围限制
message LimitRange {
  double min = 1;             // 最小值
  double max = 2;             // 最大值
}

// Ticker 行情数据 - 增强版本
message Ticker {
  string symbol = 1;              // 交易对符号
  int64 timestamp = 2;            // 时间戳
  
  // 基础价格信息
  double last = 3;                // 最新成交价
  double bid = 4;                 // 买一价
  double ask = 5;                 // 卖一价
  double bid_volume = 6;          // 买一量
  double ask_volume = 7;          // 卖一量
  
  // 24小时统计
  double high = 8;                // 24h最高价
  double low = 9;                 // 24h最低价
  double open = 10;               // 开盘价
  double close = 11;              // 收盘价
  double previous_close = 12;     // 前收盘价
  double volume = 13;             // 24h成交量(基础资产)
  double quote_volume = 14;       // 24h成交量(计价资产)
  double change = 15;             // 价格变化
  double change_percent = 16;     // 变化百分比
  double vwap = 17;               // 成交量加权平均价
  
  // 期货特有字段
  double mark_price = 18;         // 标记价格
  double index_price = 19;        // 指数价格  
  double funding_rate = 20;       // 资金费率
  int64 funding_time = 21;        // 下次资金费用时间
  double estimated_settle_price = 22; // 预估结算价
  
  // 市场类型标识
  string market_type = 23;        // spot, futures, swap
  
  // 原始数据
  string info = 24;               // JSON格式的原始数据
}

// Kline K线数据
message Kline {
  string symbol = 1;          // 交易对符号
  string exchange = 2;        // 交易所名称
  string timeframe = 3;       // 时间周期
  int64 open_time = 4;        // 开盘时间
  double open = 5;            // 开盘价
  double high = 6;            // 最高价
  double low = 7;             // 最低价
  double close = 8;           // 收盘价
  double volume = 9;          // 成交量
  bool closed = 10;           // 是否已收盘
}

// Trade 交易记录
message Trade {
  string id = 1;              // 交易ID
  string symbol = 2;          // 交易对符号
  string exchange = 3;        // 交易所名称
  double price = 4;           // 成交价格
  double quantity = 5;        // 成交数量
  string side = 6;            // 买卖方向: buy/sell
  int64 timestamp = 7;        // 成交时间
}

// Price 价格数据
message Price {
  string symbol = 1;          // 交易对符号
  double price = 2;           // 价格
  int64 timestamp = 3;        // 时间戳
}

// MiniTicker 轻量级ticker数据
message MiniTicker {
  string symbol = 1;              // 交易对符号
  int64 timestamp = 2;            // 时间戳
  double open = 3;                // 开盘价
  double high = 4;                // 最高价
  double low = 5;                 // 最低价
  double close = 6;               // 收盘价(最新价)
  double volume = 7;              // 成交量
  double quote_volume = 8;        // 计价资产成交量
}

// MarkPrice 标记价格数据(仅期货)
message MarkPrice {
  string symbol = 1;              // 交易对符号
  int64 timestamp = 2;            // 时间戳
  double mark_price = 3;          // 标记价格
  double index_price = 4;         // 指数价格
  double funding_rate = 5;        // 资金费率
  int64 funding_time = 6;         // 下次资金费用时间
  double estimated_settle_price = 7; // 预估结算价
}

// BookTicker 最优买卖价
message BookTicker {
  string symbol = 1;              // 交易对符号
  int64 timestamp = 2;            // 时间戳
  double bid_price = 3;           // 最优买价
  double bid_quantity = 4;        // 买量
  double ask_price = 5;           // 最优卖价
  double ask_quantity = 6;        // 卖量
}

// OrderBook 订单簿
message OrderBook {
  string symbol = 1;          // 交易对符号
  int64 timestamp = 2;        // 时间戳
  repeated PriceLevel bids = 3; // 买单
  repeated PriceLevel asks = 4; // 卖单
}

// PriceLevel 价格档位
message PriceLevel {
  double price = 1;           // 价格
  double quantity = 2;        // 数量
}





// =====================================================================================
// 订阅管理
// =====================================================================================

// DataType 数据类型枚举
enum DataType {
  PRICE = 0;              // 通用价格数据
  MINI_TICKER = 1;        // 轻量级ticker
  MARK_PRICE = 2;         // 标记价格(仅期货)
  BOOK_TICKER = 3;        // 最优买卖价
  FULL_TICKER = 4;        // 完整ticker
  KLINE = 5;              // K线数据
  TRADE = 6;              // 交易数据
  ORDERBOOK = 7;          // 订单簿数据
}

// SubscribeRequest 订阅请求
message SubscribeRequest {
  string exchange = 1;            // 交易所名称
  string market_type = 2;         // 市场类型: spot, futures, swap
  string symbol = 3;              // 单个交易对
  DataType data_type = 4;         // 数据类型
  
  // 可选参数
  string kline_interval = 5;      // K线间隔: 1m, 5m, 1h等 (仅当data_type=KLINE时有效)
  int32 orderbook_depth = 6;      // 订单簿深度 (仅当data_type=ORDERBOOK时有效)
}

// SubscribeResponse 订阅响应
message SubscribeResponse {
  bool success = 1;
  string message = 2;
  string topic = 3;  // 订阅topic，用于后续取消订阅
}

// UnsubscribeRequest 取消订阅请求
message UnsubscribeRequest {
  string topic = 1;
}

// UnsubscribeResponse 取消订阅响应
message UnsubscribeResponse {
  bool success = 1;
  string message = 2;
}

// =====================================================================================
// 数据获取请求/响应
// =====================================================================================

// FetchMarketsRequest 获取市场信息请求
message FetchMarketsRequest {
  string exchange = 1;
  string market_type = 2;         // 过滤市场类型
  string stack_type = 3;          // 质押物类型
}

// FetchMarketsResponse 获取市场信息响应
message FetchMarketsResponse {
  repeated Market markets = 1;
}

// FetchTickerRequest 获取行情请求
message FetchTickerRequest {
  string exchange = 1;
  string symbol = 2;
  string market_type = 3;         // 市场类型
}

// FetchTickerResponse 获取行情响应
message FetchTickerResponse {
  Ticker ticker = 1;
}

// FetchTickersRequest 获取单个行情请求
message FetchTickersRequest {
  string exchange = 1;
  string symbol = 2;
  string market_type = 3;         // 市场类型
}

// FetchTickersResponse 获取单个行情响应
message FetchTickersResponse {
  Ticker ticker = 1;
}

// FetchKlinesRequest 获取K线请求
message FetchKlinesRequest {
  string exchange = 1;
  string symbol = 2;
  string interval = 3;
  int64 start_time = 4;
  int64 end_time = 5;
  int32 limit = 6;
  string market_type = 7;         // 市场类型
}

// FetchKlinesResponse 获取K线响应
message FetchKlinesResponse {
  repeated Kline klines = 1;
}

// FetchTradesRequest 获取交易记录请求
message FetchTradesRequest {
  string exchange = 1;
  string symbol = 2;
  int64 since = 3;
  int32 limit = 4;
  string market_type = 5;         // 市场类型
}

// FetchTradesResponse 获取交易记录响应
message FetchTradesResponse {
  repeated Trade trades = 1;
}

// FetchOrderBookRequest 获取订单簿请求
message FetchOrderBookRequest {
  string exchange = 1;
  string symbol = 2;
  int32 limit = 3;
  string market_type = 4;         // 市场类型
}

// FetchOrderBookResponse 获取订单簿响应
message FetchOrderBookResponse {
  OrderBook orderbook = 1;
}

// =====================================================================================
// 数据推送
// =====================================================================================

// PriceUpdate 轻量级价格更新推送
message PriceUpdate {
  string topic = 1;        // 订阅topic作为唯一标识
  Price price = 2;         // 价格数据
}

// KlineUpdate K线更新推送
message KlineUpdate {
  string topic = 1;        // 订阅topic作为唯一标识
  Kline kline = 2;
}

// TradeUpdate 交易更新推送
message TradeUpdate {
  string topic = 1;        // 订阅topic作为唯一标识
  Trade trade = 2;
}

// OrderBookUpdate 订单簿更新推送
message OrderBookUpdate {
  string topic = 1;        // 订阅topic作为唯一标识
  OrderBook orderbook = 2;
}

// =====================================================================================
// 新增的推送消息类型
// =====================================================================================

// MiniTickerUpdate 轻量级ticker推送
message MiniTickerUpdate {
  string topic = 1;               // 订阅topic
  MiniTicker mini_ticker = 2;     // 轻量级ticker数据
  string source_stream = 3;       // 源流名称 (如: @miniTicker)
}

// MarkPriceUpdate 标记价格推送
message MarkPriceUpdate {
  string topic = 1;               // 订阅topic
  MarkPrice mark_price = 2;       // 标记价格数据
  string source_stream = 3;       // 源流名称 (如: @markPrice)
}

// BookTickerUpdate 最优买卖价推送
message BookTickerUpdate {
  string topic = 1;               // 订阅topic
  BookTicker book_ticker = 2;     // 最优买卖价数据
  string source_stream = 3;       // 源流名称 (如: @bookTicker)
}

// FullTickerUpdate 完整ticker推送 (用于特殊需求)
message FullTickerUpdate {
  string topic = 1;               // 订阅topic
  Ticker ticker = 2;              // 完整ticker数据
  string source_stream = 3;       // 源流名称 (如: @ticker)
}